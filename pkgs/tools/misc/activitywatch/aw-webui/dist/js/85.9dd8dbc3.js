"use strict";(self["webpackChunkaw_webui"]=self["webpackChunkaw_webui"]||[]).push([[85],{80085:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[r("b-form-group",[r("b-form-select",{model:{value:e.mode,callback:function(t){e.mode=t},expression:"mode"}},[r("option",{attrs:{value:"custom"}},[e._v("Custom regex")]),r("option",{attrs:{value:"categories"}},[e._v("Use existing categories")])])],1),r("b-input-group",["categories"==e.mode?r("aw-select-categories",{model:{value:e.filterCategoriesData,callback:function(t){e.filterCategoriesData=t},expression:"filterCategoriesData"}}):e._e(),"custom"==e.mode?r("b-input",{attrs:{placeholder:"Regex pattern to search for"},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.generate()}},model:{value:e.pattern,callback:function(t){e.pattern=t},expression:"pattern"}}):e._e(),r("b-input-group-append",[e._t("input-group-append")],2)],1)],1)},a=[],o=r(63360),i=r(57611),s=r(46225),u=(r(35666),r(21249),r(57327),r(41539),r(69600),r(68309),r(26699),r(32023),r(92222),r(20144)),c=" > ";const l=u["default"].extend({name:"SelectCategoriesOrPattern",props:{filterCategories:{type:Array,default:function(){return[]}}},data:function(){return{mode:"categories",pattern:"",filterCategoriesData:[]}},computed:{categories:function(){return this.$store.state.categories.classes},categoriesWithRules:function(){var e=this;return"categories"===this.mode?this.categories.filter((function(t){var r,n=t.name.join(c),a=(0,s.Z)(e.filterCategoriesData);try{for(a.s();!(r=a.n()).done;){var o=r.value;if(n.includes(o.join(c)))return!0}}catch(i){a.e(i)}finally{a.f()}return!1})).filter((function(e){return"regex"===e.rule.type})).map((function(e){return[e.name,e.rule]})):"custom"===this.mode?[[["searched"],{type:"regex",regex:this.pattern}]]:(console.error("Unknown mode:",this.mode),[])}},watch:{filterCategories:function(){this.filterCategoriesData=[].concat((0,i.Z)(this.filterCategoriesData),(0,i.Z)(this.filterCategories))},filterCategoriesData:function(){this.$emit("input",this.categoriesWithRules),console.log(this.categoriesWithRules)},pattern:function(){this.$emit("input",this.categoriesWithRules),console.log(this.categoriesWithRules)}},mounted:function(){var e=this;return(0,o.Z)(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$store.dispatch("categories/load");case 2:case"end":return t.stop()}}),t)})))()}}),f=l;var p=r(1001),g=(0,p.Z)(f,n,a,!1,null,null,null);const d=g.exports},57611:(e,t,r)=>{r.d(t,{Z:()=>u});r(79753);var n=r(93002);function a(e){if(Array.isArray(e))return(0,n.Z)(e)}r(82526),r(41817),r(41539),r(32165),r(78783),r(33948),r(91038);function o(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}var i=r(91449);r(21703),r(96647);function s(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(e){return a(e)||o(e)||(0,i.Z)(e)||s()}}}]);
//# sourceMappingURL=85.9dd8dbc3.js.map